# This file contains which conditions to plot and which color will be used for each condition,,,,
# You can add as much conditions as you want to delineate, as long as these conditions are an element of `Input.conditions` in the parameter file,,,
# `Color_type`, `Color`, `GradientLimits` needs to be here,,
# `Color_type` can either be solid, gradient_pre , or â€œgradient_mod`,,
# If `Color_type` is `solid`, `Color` must be a CSS color in matplotlib (see https://matplotlib.org/stable/gallery/color/named_colors.html),,,
# Use color gradients when you have several timepoints and you want to follow the phenotypic progression in the spectrum,,,,
# If `Color_type` is `gradient_mod`, `Color` must be a preset colormap in matplotlib, https://matplotlib.org/stable/tutorials/colors/colormaps.html,,
# If `Color_type` is `gradient_mod`, `Color` can either be one color (set as the maximum of the color gradient) ,,,
#     or a list of colors separated by `;` (sequence of colors in the gradient from minimum to maximum),,,,
#     and each color name must be a CSS color in matplotlib,,,,
# `GradientLimits` sets the minimum and maximum timepoints that will be reflected in the gradient and must be separated by `;`,,,,
#     e.g., 0;100 will create a color gradient where the minimum is set at P0 and 100 is set at P100,,,
#     Everything beyond the limits will be colored the same as the limits,,,,
#     Will be ignored if `Color_type` is `solid`,,,,
Region,Model,Color_type,Color,GradientLimits
IPL,Ctrl_Kxa,solid,magenta,none
OPL,Ctrl_Kxa,solid,cyan,none
